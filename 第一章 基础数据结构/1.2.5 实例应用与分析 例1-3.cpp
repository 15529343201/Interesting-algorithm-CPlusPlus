/*例1-3 给定一个单链表，请设计程序判断该链表是否有环*/
/*分析:单链表的结构定义，它的每一个存储节点(头结点和尾结点除外)在结构上只有一个前驱结点和一个
后继结点，其头结点没有前驱并且尾结点没有后继。*/
/*单链表有环只能是指它末尾有环，不会是在中部，因为如果那样的话就违背了单链表只有一个后继结点的要求。
所以，我们可以将带环的单链表看成是一个单链表与一个循环链表的组合。判断一个单链表是否有环最简单的方法就是
追逐法。设置两个指针p和q指向链表的头结点，然后循环移动两个指针，p指针每次移动一个结点，即一步，q指针
每次移动两步，如果该单链表存在环，那么这两个指针总会在某个位置相遇。如果链表无环，则q会率先指向NULL。*/
bool isCircleLink(Node *head)
{
	if(head==NULL)
		return false;
	Node *p,*q;
	p=q=head;
	while(q!=NULL && q->next!=NULL)
	{
		p=p->next;
		q=q->next->next;
		if(p==q)
		{
			break;
		}
	}
	if(p==q && p!=NULL)   //相遇且不为NULL,则有环
		return true;
	return false;         //否则无环 
} 
